package(default_visibility = ["//visibility:private"])

cc_library(
    name = "hello-lib",
    srcs = ["src/hello-lib.cpp"],
    hdrs = ["include/bazel-test-project-cpp/hello-lib.hpp"],
    includes = ["include/bazel-test-project-cpp"],
    deps = [
        "@glog",
    ],
)

cc_binary(
    name = "hello-world",
    srcs = ["main/hello-world.cpp"],
    args = [
        "world!!!!!!!!",
        "--minloglevel=0",
        "--v=0",
        "--vmodule=INFO",
        "--stderrthreshold=0",
        "--logtostderr=1",
    ],  # glog: gflags don't seem to work
    deps = [
        ":hello-lib",
        "@gflags",
    ],
)

filegroup(
    name = "src",
    srcs = glob(["src/**"]),
)

cc_test(
    name = "hello-test",
    size = "small",
    srcs = ["test/hello-test.cpp"],
    env = {
        # glog: env variables work fine. Run the test with `bazel test --test_output=all //:hello-test`. The logs can also be found in `bazel-testlogs/src/.../hello-test/test.log`
        "GLOG_log_dir": "logs",
        "GLOG_logtostderr": "1",  # print log to stderr instead of a log file
        "GLOG_v": "0",  # define the log files severity
        "GLOG_vmodule": "INFO",  # define the log files severity
        "GLOG_stderrthreshold": "0",  # define the stderr severity
    },
    deps = [
        ":hello-lib",
        "@glog",
        "@googletest//:gtest_main",
    ],
)

cc_binary(
    name = "hello-benchmark",
    srcs = ["benchmark/hello-benchmark.cpp"],
    deps = [
        ":hello-lib",
        "@google_benchmark//:benchmark",
    ],
)
